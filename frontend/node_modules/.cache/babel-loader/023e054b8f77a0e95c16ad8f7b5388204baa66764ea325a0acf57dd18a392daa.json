{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaypa\\\\OneDrive\\\\Documents\\\\django_projects\\\\blendnet-intern\\\\frontend\\\\src\\\\components\\\\CandleStickChart.jsx\";\n// import React from 'react';\n// import { Line } from 'react-chartjs-2';\n// import 'chartjs-adapter-date-fns';\n// import { enGB } from 'date-fns/locale';\n// import {Chart, LinearScale, PointElement, Tooltip, Legend, TimeScale} from \"chart.js\"; \n\n// import { OhlcElement, OhlcController, CandlestickElement, CandlestickController } from 'chartjs-chart-financial'\n\n// Chart.register(OhlcElement, OhlcController, CandlestickElement, CandlestickController)\n\n// Chart.register(LinearScale, PointElement, Tooltip, Legend, TimeScale); \n\n// const CandlestickChart = ({ data }) => {\n//   // Extracting data from JSON\n//   const labels = Object.keys(data['Time Series (15min)']);\n\n//   const candleData = labels.map(label => {\n//     const candle = data['Time Series (15min)'][label];\n//     return {\n//       t: new Date(label),\n//       o: parseFloat(candle['1. open']),\n//       h: parseFloat(candle['2. high']),\n//       l: parseFloat(candle['3. low']),\n//       c: parseFloat(candle['4. close'])\n//     };\n//   });\n\n//   // Creating dataset for candlestick chart\n//   const dataset = {\n//     datasets: [{\n//       label: 'Candlestick Chart',\n//       data: candleData,\n//       type: 'candlestick',\n//       borderColor: 'black',\n//       backgroundColor: 'rgba(0,0,0,0)',\n//       borderWidth: 1,\n//     }]\n//   };\n\n//   // Chart options\n//   const options = {\n//     scales: {\n//       x: {\n//         type: 'time',\n//         adapters: { \n//           date: {\n//             locale: enGB, \n//           },\n//         },\n//         time: {\n//           unit: 'hour' // Adjust as needed\n//         }\n//       }\n//     }\n//   };\n\n//   return (\n//     <div style={{height:500, width:500}}>\n//       <Line data={dataset} options={options} />\n//     </div>\n//   );\n// };\n\n// export default CandlestickChart;\n\n/* App.js */\nimport React, { Component } from 'react';\nimport CanvasJSReact from '@canvasjs/react-charts';\n//var CanvasJSReact = require('@canvasjs/react-charts');\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nconst CandleStickChart = () => {\n  const options = {\n    theme: \"light2\",\n    // \"light1\", \"light2\", \"dark1\", \"dark2\"\n    animationEnabled: true,\n    exportEnabled: true,\n    title: {\n      text: \"Intel Corporation Stock Price -  2017\"\n    },\n    axisX: {\n      valueFormatString: \"MMM\"\n    },\n    axisY: {\n      prefix: \"$\",\n      title: \"Price (in USD)\"\n    },\n    data: [{\n      type: \"candlestick\",\n      showInLegend: true,\n      name: \"Intel Corporation\",\n      yValueFormatString: \"$###0.00\",\n      xValueFormatString: \"MMMM YY\",\n      dataPoints: [{\n        x: new Date(\"2017-01-01\"),\n        y: [36.61, 38.45, 36.19, 36.82]\n      }, {\n        x: new Date(\"2017-02-01\"),\n        y: [36.82, 36.95, 34.84, 36.20]\n      }, {\n        x: new Date(\"2017-03-01\"),\n        y: [35.85, 36.30, 34.66, 36.07]\n      }, {\n        x: new Date(\"2017-04-01\"),\n        y: [36.19, 37.50, 35.21, 36.15]\n      }, {\n        x: new Date(\"2017-05-01\"),\n        y: [36.11, 37.17, 35.02, 36.11]\n      }, {\n        x: new Date(\"2017-06-01\"),\n        y: [36.12, 36.57, 33.34, 33.74]\n      }, {\n        x: new Date(\"2017-07-01\"),\n        y: [33.51, 35.86, 33.23, 35.47]\n      }, {\n        x: new Date(\"2017-08-01\"),\n        y: [35.66, 36.70, 34.38, 35.07]\n      }, {\n        x: new Date(\"2017-09-01\"),\n        y: [35.24, 38.15, 34.93, 38.08]\n      }, {\n        x: new Date(\"2017-10-01\"),\n        y: [38.12, 45.80, 38.08, 45.49]\n      }, {\n        x: new Date(\"2017-11-01\"),\n        y: [45.97, 47.30, 43.77, 44.84]\n      }, {\n        x: new Date(\"2017-12-01\"),\n        y: [44.73, 47.64, 42.67, 46.16]\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n      options: options,\n      onRef: ref => this.chart = ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_c = CandleStickChart;\nexport default CandleStickChart;\nvar _c;\n$RefreshReg$(_c, \"CandleStickChart\");","map":{"version":3,"names":["React","Component","CanvasJSReact","jsxDEV","_jsxDEV","CanvasJS","CanvasJSChart","CandleStickChart","options","theme","animationEnabled","exportEnabled","title","text","axisX","valueFormatString","axisY","prefix","data","type","showInLegend","name","yValueFormatString","xValueFormatString","dataPoints","x","Date","y","children","onRef","ref","chart","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jaypa/OneDrive/Documents/django_projects/blendnet-intern/frontend/src/components/CandleStickChart.jsx"],"sourcesContent":["// import React from 'react';\r\n// import { Line } from 'react-chartjs-2';\r\n// import 'chartjs-adapter-date-fns';\r\n// import { enGB } from 'date-fns/locale';\r\n// import {Chart, LinearScale, PointElement, Tooltip, Legend, TimeScale} from \"chart.js\"; \r\n\r\n// import { OhlcElement, OhlcController, CandlestickElement, CandlestickController } from 'chartjs-chart-financial'\r\n\r\n// Chart.register(OhlcElement, OhlcController, CandlestickElement, CandlestickController)\r\n\r\n// Chart.register(LinearScale, PointElement, Tooltip, Legend, TimeScale); \r\n\r\n// const CandlestickChart = ({ data }) => {\r\n//   // Extracting data from JSON\r\n//   const labels = Object.keys(data['Time Series (15min)']);\r\n\r\n//   const candleData = labels.map(label => {\r\n//     const candle = data['Time Series (15min)'][label];\r\n//     return {\r\n//       t: new Date(label),\r\n//       o: parseFloat(candle['1. open']),\r\n//       h: parseFloat(candle['2. high']),\r\n//       l: parseFloat(candle['3. low']),\r\n//       c: parseFloat(candle['4. close'])\r\n//     };\r\n//   });\r\n\r\n//   // Creating dataset for candlestick chart\r\n//   const dataset = {\r\n//     datasets: [{\r\n//       label: 'Candlestick Chart',\r\n//       data: candleData,\r\n//       type: 'candlestick',\r\n//       borderColor: 'black',\r\n//       backgroundColor: 'rgba(0,0,0,0)',\r\n//       borderWidth: 1,\r\n//     }]\r\n//   };\r\n\r\n//   // Chart options\r\n//   const options = {\r\n//     scales: {\r\n//       x: {\r\n//         type: 'time',\r\n//         adapters: { \r\n//           date: {\r\n//             locale: enGB, \r\n//           },\r\n//         },\r\n//         time: {\r\n//           unit: 'hour' // Adjust as needed\r\n//         }\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{height:500, width:500}}>\r\n//       <Line data={dataset} options={options} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CandlestickChart;\r\n\r\n\r\n\r\n\r\n/* App.js */\r\nimport React, { Component } from 'react';\r\nimport CanvasJSReact from '@canvasjs/react-charts';\r\n//var CanvasJSReact = require('@canvasjs/react-charts');\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\nconst CandleStickChart = () => {\r\n\r\n  const options = {\r\n    theme: \"light2\", // \"light1\", \"light2\", \"dark1\", \"dark2\"\r\n    animationEnabled: true,\r\n    exportEnabled: true,\r\n    title: {\r\n      text: \"Intel Corporation Stock Price -  2017\"\r\n    },\r\n    axisX: {\r\n      valueFormatString: \"MMM\"\r\n    },\r\n    axisY: {\r\n      prefix: \"$\",\r\n      title: \"Price (in USD)\"\r\n    },\r\n    data: [{\r\n      type: \"candlestick\",\r\n      showInLegend: true,\r\n      name: \"Intel Corporation\",\r\n      yValueFormatString: \"$###0.00\",\r\n      xValueFormatString: \"MMMM YY\",\r\n      dataPoints: [\r\n        { x: new Date(\"2017-01-01\"), y: [36.61, 38.45, 36.19, 36.82] },\r\n        { x: new Date(\"2017-02-01\"), y: [36.82, 36.95, 34.84, 36.20] },\r\n        { x: new Date(\"2017-03-01\"), y: [35.85, 36.30, 34.66, 36.07] },\r\n        { x: new Date(\"2017-04-01\"), y: [36.19, 37.50, 35.21, 36.15] },\r\n        { x: new Date(\"2017-05-01\"), y: [36.11, 37.17, 35.02, 36.11] },\r\n        { x: new Date(\"2017-06-01\"), y: [36.12, 36.57, 33.34, 33.74] },\r\n        { x: new Date(\"2017-07-01\"), y: [33.51, 35.86, 33.23, 35.47] },\r\n        { x: new Date(\"2017-08-01\"), y: [35.66, 36.70, 34.38, 35.07] },\r\n        { x: new Date(\"2017-09-01\"), y: [35.24, 38.15, 34.93, 38.08] },\r\n        { x: new Date(\"2017-10-01\"), y: [38.12, 45.80, 38.08, 45.49] },\r\n        { x: new Date(\"2017-11-01\"), y: [45.97, 47.30, 43.77, 44.84] },\r\n        { x: new Date(\"2017-12-01\"), y: [44.73, 47.64, 42.67, 46.16] }\r\n      ]\r\n    }\r\n    ]\r\n  }\r\n  return (\r\n    <div>\r\n      <CanvasJSChart options={options}\r\n        onRef={ref => this.chart = ref}\r\n      />\r\n      {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CandleStickChart"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}