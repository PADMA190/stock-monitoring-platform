{"ast":null,"code":"import React from'react';import{Line}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";const StockChart=_ref=>{let{data}=_ref;const labels=Object.keys(data['Time Series (15min)']).reverse();const ohlcData=labels.map(label=>({t:new Date(label),y:[parseFloat(data['Time Series (15min)'][label]['1. open']),parseFloat(data['Time Series (15min)'][label]['2. high']),parseFloat(data['Time Series (15min)'][label]['3. low']),parseFloat(data['Time Series (15min)'][label]['4. close'])]}));const volumeData=labels.map(label=>({t:new Date(label),y:parseInt(data['Time Series (15min)'][label]['5. volume'])}));const chartData={datasets:[{label:'OHLC',data:ohlcData,borderColor:'blue',type:'candlestick'},{label:'Volume',data:volumeData,borderColor:'green',backgroundColor:'green',type:'bar',yAxisID:'volume-axis'}]};const chartOptions={scales:{xAxes:[{type:'time',time:{unit:'minute',displayFormats:{minute:'HH:mm'}}}],yAxes:[{scaleLabel:{display:true,labelString:'Price'}},{id:'volume-axis',position:'right',scaleLabel:{display:true,labelString:'Volume'},gridLines:{drawOnChartArea:false}}]}};return/*#__PURE__*/_jsx(Line,{data:chartData,options:chartOptions});};export default StockChart;","map":{"version":3,"names":["React","Line","jsx","_jsx","StockChart","_ref","data","labels","Object","keys","reverse","ohlcData","map","label","t","Date","y","parseFloat","volumeData","parseInt","chartData","datasets","borderColor","type","backgroundColor","yAxisID","chartOptions","scales","xAxes","time","unit","displayFormats","minute","yAxes","scaleLabel","display","labelString","id","position","gridLines","drawOnChartArea","options"],"sources":["C:/Users/jaypa/OneDrive/Documents/django_projects/blendnet-intern/frontend/src/components/StockChart.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nconst StockChart = ({ data }) => {\r\n  const labels = Object.keys(data['Time Series (15min)']).reverse();\r\n  const ohlcData = labels.map((label) => ({\r\n    t: new Date(label),\r\n    y: [\r\n      parseFloat(data['Time Series (15min)'][label]['1. open']),\r\n      parseFloat(data['Time Series (15min)'][label]['2. high']),\r\n      parseFloat(data['Time Series (15min)'][label]['3. low']),\r\n      parseFloat(data['Time Series (15min)'][label]['4. close']),\r\n    ],\r\n  }));\r\n  const volumeData = labels.map((label) => ({\r\n    t: new Date(label),\r\n    y: parseInt(data['Time Series (15min)'][label]['5. volume']),\r\n  }));\r\n\r\n  const chartData = {\r\n    datasets: [\r\n      {\r\n        label: 'OHLC',\r\n        data: ohlcData,\r\n        borderColor: 'blue',\r\n        type: 'candlestick',\r\n      },\r\n      {\r\n        label: 'Volume',\r\n        data: volumeData,\r\n        borderColor: 'green',\r\n        backgroundColor: 'green',\r\n        type: 'bar',\r\n        yAxisID: 'volume-axis',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: 'time',\r\n          time: {\r\n            unit: 'minute',\r\n            displayFormats: {\r\n              minute: 'HH:mm',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Price',\r\n          },\r\n        },\r\n        {\r\n          id: 'volume-axis',\r\n          position: 'right',\r\n          scaleLabel: {\r\n            display: true,\r\n            labelString: 'Volume',\r\n          },\r\n          gridLines: {\r\n            drawOnChartArea: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return <Line data={chartData} options={chartOptions} />;\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC1B,KAAM,CAAAE,MAAM,CAAGC,MAAM,CAACC,IAAI,CAACH,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,CACjE,KAAM,CAAAC,QAAQ,CAAGJ,MAAM,CAACK,GAAG,CAAEC,KAAK,GAAM,CACtCC,CAAC,CAAE,GAAI,CAAAC,IAAI,CAACF,KAAK,CAAC,CAClBG,CAAC,CAAE,CACDC,UAAU,CAACX,IAAI,CAAC,qBAAqB,CAAC,CAACO,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CACzDI,UAAU,CAACX,IAAI,CAAC,qBAAqB,CAAC,CAACO,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,CACzDI,UAAU,CAACX,IAAI,CAAC,qBAAqB,CAAC,CAACO,KAAK,CAAC,CAAC,QAAQ,CAAC,CAAC,CACxDI,UAAU,CAACX,IAAI,CAAC,qBAAqB,CAAC,CAACO,KAAK,CAAC,CAAC,UAAU,CAAC,CAAC,CAE9D,CAAC,CAAC,CAAC,CACH,KAAM,CAAAK,UAAU,CAAGX,MAAM,CAACK,GAAG,CAAEC,KAAK,GAAM,CACxCC,CAAC,CAAE,GAAI,CAAAC,IAAI,CAACF,KAAK,CAAC,CAClBG,CAAC,CAAEG,QAAQ,CAACb,IAAI,CAAC,qBAAqB,CAAC,CAACO,KAAK,CAAC,CAAC,WAAW,CAAC,CAC7D,CAAC,CAAC,CAAC,CAEH,KAAM,CAAAO,SAAS,CAAG,CAChBC,QAAQ,CAAE,CACR,CACER,KAAK,CAAE,MAAM,CACbP,IAAI,CAAEK,QAAQ,CACdW,WAAW,CAAE,MAAM,CACnBC,IAAI,CAAE,aACR,CAAC,CACD,CACEV,KAAK,CAAE,QAAQ,CACfP,IAAI,CAAEY,UAAU,CAChBI,WAAW,CAAE,OAAO,CACpBE,eAAe,CAAE,OAAO,CACxBD,IAAI,CAAE,KAAK,CACXE,OAAO,CAAE,aACX,CAAC,CAEL,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,CACnBC,MAAM,CAAE,CACNC,KAAK,CAAE,CACL,CACEL,IAAI,CAAE,MAAM,CACZM,IAAI,CAAE,CACJC,IAAI,CAAE,QAAQ,CACdC,cAAc,CAAE,CACdC,MAAM,CAAE,OACV,CACF,CACF,CAAC,CACF,CACDC,KAAK,CAAE,CACL,CACEC,UAAU,CAAE,CACVC,OAAO,CAAE,IAAI,CACbC,WAAW,CAAE,OACf,CACF,CAAC,CACD,CACEC,EAAE,CAAE,aAAa,CACjBC,QAAQ,CAAE,OAAO,CACjBJ,UAAU,CAAE,CACVC,OAAO,CAAE,IAAI,CACbC,WAAW,CAAE,QACf,CAAC,CACDG,SAAS,CAAE,CACTC,eAAe,CAAE,KACnB,CACF,CAAC,CAEL,CACF,CAAC,CAED,mBAAOrC,IAAA,CAACF,IAAI,EAACK,IAAI,CAAEc,SAAU,CAACqB,OAAO,CAAEf,YAAa,CAAE,CAAC,CACzD,CAAC,CAED,cAAe,CAAAtB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}