{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaypa\\\\OneDrive\\\\Documents\\\\django_projects\\\\blendnet-intern\\\\frontend\\\\src\\\\components\\\\CandleStickChart.jsx\";\n// import React from 'react';\n// import { Line } from 'react-chartjs-2';\n// import 'chartjs-adapter-date-fns';\n// import { enGB, enUS } from 'date-fns/locale';\n// import {Chart, LinearScale, PointElement, Tooltip, Legend, TimeScale} from \"chart.js\"; \n\n// import { OhlcElement, OhlcController, CandlestickElement, CandlestickController } from 'chartjs-chart-financial'\n\n// Chart.register(OhlcElement, OhlcController);\n// Chart.register(CandlestickElement, CandlestickController);\n// Chart.register(LinearScale, PointElement, Tooltip, Legend, TimeScale); \n\n// const CandlestickChart = ({ data }) => {\n//   // Extracting data from JSON\n// const labels = Object.keys(data['Time Series (15min)']);\n\n// const candleData = labels.map(label => {\n//   const candle = data['Time Series (15min)'][label];\n//   return {\n//     t: new Date(label),\n//     o: parseFloat(candle['1. open']),\n//     h: parseFloat(candle['2. high']),\n//     l: parseFloat(candle['3. low']),\n//     c: parseFloat(candle['4. close'])\n//   };\n// });\n\n//   // Creating dataset for candlestick chart\n//   const dataset = {\n//     datasets: [{\n//       label: 'Candlestick Chart',\n//       data: candleData,\n//       type: 'candlestick',\n//       borderColor: 'black',\n//       backgroundColor: 'rgba(0,0,0,0)',\n//       borderWidth: 1,\n//     }]\n//   };\n\n// // Chart options\n// const options = {\n//   scales: {\n//     x: {\n//       type: 'time',\n//       adapters: { \n//         date: {\n//           locale: enGB,\n//         },\n//       },\n//       time: {\n//         unit: 'second' // Adjust as needed\n//       }\n//     }\n//   }\n// };\n\n//   return (\n//     <>\n//     <div style={{height:500, width:500}}>\n//       <Line data={dataset} options={options} />\n//     </div>\n\n//     </>\n\n//   );\n// };\n\n// export default CandlestickChart;\n\nimport React from 'react';\nimport { Chart } from 'react-chartjs-2';\nimport 'chartjs-adapter-date-fns';\nimport { enGB } from 'date-fns/locale';\nimport { LinearScale, PointElement, Tooltip, Legend, TimeScale } from 'chart.js';\nimport { CandlestickElement } from 'chartjs-chart-financial';\n\n// Chart.register(CandlestickElement, LinearScale, PointElement, Tooltip, Legend, TimeScale);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReact.useEffect(() => {\n  // Register custom chart elements and scales\n  Chart.register(CandlestickElement, LinearScale, PointElement, Tooltip, Legend, TimeScale);\n}, []);\nconst CandlestickChart = ({\n  data\n}) => {\n  // Extracting data from JSON\n  const labels = Object.keys(data['Time Series (15min)']);\n  const candleData = labels.map(label => {\n    const candle = data['Time Series (15min)'][label];\n    return {\n      t: new Date(label),\n      o: parseFloat(candle['1. open']),\n      h: parseFloat(candle['2. high']),\n      l: parseFloat(candle['3. low']),\n      c: parseFloat(candle['4. close'])\n    };\n  });\n\n  // Creating dataset for candlestick chart\n  const dataset = {\n    datasets: [{\n      label: 'Candlestick Chart',\n      data: candleData,\n      type: 'candlestick',\n      borderColor: 'black',\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 1\n    }]\n  };\n\n  // Chart options\n  const options = {\n    scales: {\n      x: {\n        type: 'time',\n        adapters: {\n          date: {\n            locale: enGB\n          }\n        },\n        time: {\n          unit: 'second' // Adjust as needed\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 500,\n      width: 500\n    },\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      type: \"candlestick\",\n      data: dataset,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_c = CandlestickChart;\nexport { CandlestickChart };\nvar _c;\n$RefreshReg$(_c, \"CandlestickChart\");","map":{"version":3,"names":["React","Chart","enGB","LinearScale","PointElement","Tooltip","Legend","TimeScale","CandlestickElement","jsxDEV","_jsxDEV","useEffect","register","CandlestickChart","data","labels","Object","keys","candleData","map","label","candle","t","Date","o","parseFloat","h","l","c","dataset","datasets","type","borderColor","backgroundColor","borderWidth","options","scales","x","adapters","date","locale","time","unit","style","height","width","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/jaypa/OneDrive/Documents/django_projects/blendnet-intern/frontend/src/components/CandleStickChart.jsx"],"sourcesContent":["// import React from 'react';\r\n// import { Line } from 'react-chartjs-2';\r\n// import 'chartjs-adapter-date-fns';\r\n// import { enGB, enUS } from 'date-fns/locale';\r\n// import {Chart, LinearScale, PointElement, Tooltip, Legend, TimeScale} from \"chart.js\"; \r\n\r\n// import { OhlcElement, OhlcController, CandlestickElement, CandlestickController } from 'chartjs-chart-financial'\r\n\r\n// Chart.register(OhlcElement, OhlcController);\r\n// Chart.register(CandlestickElement, CandlestickController);\r\n// Chart.register(LinearScale, PointElement, Tooltip, Legend, TimeScale); \r\n\r\n// const CandlestickChart = ({ data }) => {\r\n//   // Extracting data from JSON\r\n// const labels = Object.keys(data['Time Series (15min)']);\r\n\r\n// const candleData = labels.map(label => {\r\n//   const candle = data['Time Series (15min)'][label];\r\n//   return {\r\n//     t: new Date(label),\r\n//     o: parseFloat(candle['1. open']),\r\n//     h: parseFloat(candle['2. high']),\r\n//     l: parseFloat(candle['3. low']),\r\n//     c: parseFloat(candle['4. close'])\r\n//   };\r\n// });\r\n\r\n//   // Creating dataset for candlestick chart\r\n//   const dataset = {\r\n//     datasets: [{\r\n//       label: 'Candlestick Chart',\r\n//       data: candleData,\r\n//       type: 'candlestick',\r\n//       borderColor: 'black',\r\n//       backgroundColor: 'rgba(0,0,0,0)',\r\n//       borderWidth: 1,\r\n//     }]\r\n//   };\r\n\r\n// // Chart options\r\n// const options = {\r\n//   scales: {\r\n//     x: {\r\n//       type: 'time',\r\n//       adapters: { \r\n//         date: {\r\n//           locale: enGB,\r\n//         },\r\n//       },\r\n//       time: {\r\n//         unit: 'second' // Adjust as needed\r\n//       }\r\n//     }\r\n//   }\r\n// };\r\n\r\n//   return (\r\n//     <>\r\n//     <div style={{height:500, width:500}}>\r\n//       <Line data={dataset} options={options} />\r\n//     </div>\r\n\r\n//     </>\r\n\r\n//   );\r\n// };\r\n\r\n// export default CandlestickChart;\r\n\r\n\r\nimport React from 'react';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport 'chartjs-adapter-date-fns';\r\nimport { enGB } from 'date-fns/locale';\r\nimport { LinearScale, PointElement, Tooltip, Legend, TimeScale } from 'chart.js';\r\nimport { CandlestickElement } from 'chartjs-chart-financial';\r\n\r\n// Chart.register(CandlestickElement, LinearScale, PointElement, Tooltip, Legend, TimeScale);\r\n\r\nReact.useEffect(() => {\r\n  // Register custom chart elements and scales\r\n  Chart.register(CandlestickElement, LinearScale, PointElement, Tooltip, Legend, TimeScale);\r\n}, []);\r\n\r\nconst CandlestickChart = ({ data }) => {\r\n\r\n  // Extracting data from JSON\r\n  const labels = Object.keys(data['Time Series (15min)']);\r\n\r\n\r\n  const candleData = labels.map(label => {\r\n    const candle = data['Time Series (15min)'][label];\r\n    return {\r\n      t: new Date(label),\r\n      o: parseFloat(candle['1. open']),\r\n      h: parseFloat(candle['2. high']),\r\n      l: parseFloat(candle['3. low']),\r\n      c: parseFloat(candle['4. close'])\r\n    };\r\n  });\r\n\r\n  // Creating dataset for candlestick chart\r\n  const dataset = {\r\n    datasets: [{\r\n      label: 'Candlestick Chart',\r\n      data: candleData,\r\n      type: 'candlestick',\r\n      borderColor: 'black',\r\n      backgroundColor: 'rgba(0,0,0,0)',\r\n      borderWidth: 1,\r\n    }]\r\n  };\r\n\r\n  // Chart options\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'time',\r\n        adapters: {\r\n          date: {\r\n            locale: enGB,\r\n          },\r\n        },\r\n        time: {\r\n          unit: 'second' // Adjust as needed\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 500, width: 500 }}>\r\n      <Chart type=\"candlestick\" data={dataset} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { CandlestickChart };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}