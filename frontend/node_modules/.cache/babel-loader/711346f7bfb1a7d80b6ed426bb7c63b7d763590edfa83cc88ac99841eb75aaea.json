{"ast":null,"code":"import React,{useEffect,useRef}from'react';import Chart from'chart.js/auto';import'chartjs-adapter-date-fns';import{jsx as _jsx}from\"react/jsx-runtime\";const StockChart=_ref=>{let{data}=_ref;const chartRef=useRef();useEffect(()=>{if(data&&chartRef.current){const ctx=chartRef.current.getContext('2d');// Extracting data\nconst labels=Object.keys(data['Time Series (5min)']).reverse();const ohlcData=labels.map(date=>{const item=data['Time Series (5min)'][date];return{t:new Date(date),o:parseFloat(item['1. open']),h:parseFloat(item['2. high']),l:parseFloat(item['3. low']),c:parseFloat(item['4. close']),v:parseInt(item['5. volume'])};});// Drawing chart\nnew Chart(ctx,{type:'candlestick',data:{datasets:[{data:ohlcData,label:'Stock Price',borderColor:'blue',backgroundColor:'rgba(0, 0, 255, 0.3)',borderWidth:1}]},options:{scales:{xAxes:[{type:'time',distribution:'linear',time:{unit:'hour',displayFormats:{hour:'MMM D, hA'}},ticks:{source:'data'}}],yAxes:[{scaleLabel:{display:true,labelString:'Price'}}]}}});}},[data]);return/*#__PURE__*/_jsx(\"canvas\",{ref:chartRef});};export default StockChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsx","_jsx","StockChart","_ref","data","chartRef","current","ctx","getContext","labels","Object","keys","reverse","ohlcData","map","date","item","t","Date","o","parseFloat","h","l","c","v","parseInt","type","datasets","label","borderColor","backgroundColor","borderWidth","options","scales","xAxes","distribution","time","unit","displayFormats","hour","ticks","source","yAxes","scaleLabel","display","labelString","ref"],"sources":["C:/Users/jaypa/OneDrive/Documents/django_projects/blendnet-intern/frontend/src/components/StockChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto'; \r\nimport 'chartjs-adapter-date-fns'; \r\n\r\nconst StockChart = ({ data }) => {\r\n  const chartRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (data && chartRef.current) {\r\n      const ctx = chartRef.current.getContext('2d');\r\n\r\n      // Extracting data\r\n      const labels = Object.keys(data['Time Series (5min)']).reverse();\r\n      const ohlcData = labels.map(date => {\r\n        const item = data['Time Series (5min)'][date];\r\n        return {\r\n          t: new Date(date),\r\n          o: parseFloat(item['1. open']),\r\n          h: parseFloat(item['2. high']),\r\n          l: parseFloat(item['3. low']),\r\n          c: parseFloat(item['4. close']),\r\n          v: parseInt(item['5. volume'])\r\n        };\r\n      });\r\n\r\n      // Drawing chart\r\n      new Chart(ctx, {\r\n        type: 'candlestick',\r\n        data: {\r\n          datasets: [{\r\n            data: ohlcData,\r\n            label: 'Stock Price',\r\n            borderColor: 'blue',\r\n            backgroundColor: 'rgba(0, 0, 255, 0.3)',\r\n            borderWidth: 1\r\n          }]\r\n        },\r\n        options: {\r\n          scales: {\r\n            xAxes: [{\r\n              type: 'time',\r\n              distribution: 'linear',\r\n              time: {\r\n                unit: 'hour',\r\n                displayFormats: {\r\n                  hour: 'MMM D, hA'\r\n                }\r\n              },\r\n              ticks: {\r\n                source: 'data'\r\n              }\r\n            }],\r\n            yAxes: [{\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: 'Price'\r\n              }\r\n            }]\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  return <canvas ref={chartRef} />;\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,MAAO,CAAAC,KAAK,KAAM,eAAe,CACjC,MAAO,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElC,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC1B,KAAM,CAAAE,QAAQ,CAAGP,MAAM,CAAC,CAAC,CAEzBD,SAAS,CAAC,IAAM,CACd,GAAIO,IAAI,EAAIC,QAAQ,CAACC,OAAO,CAAE,CAC5B,KAAM,CAAAC,GAAG,CAAGF,QAAQ,CAACC,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC,CAE7C;AACA,KAAM,CAAAC,MAAM,CAAGC,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAACQ,OAAO,CAAC,CAAC,CAChE,KAAM,CAAAC,QAAQ,CAAGJ,MAAM,CAACK,GAAG,CAACC,IAAI,EAAI,CAClC,KAAM,CAAAC,IAAI,CAAGZ,IAAI,CAAC,oBAAoB,CAAC,CAACW,IAAI,CAAC,CAC7C,MAAO,CACLE,CAAC,CAAE,GAAI,CAAAC,IAAI,CAACH,IAAI,CAAC,CACjBI,CAAC,CAAEC,UAAU,CAACJ,IAAI,CAAC,SAAS,CAAC,CAAC,CAC9BK,CAAC,CAAED,UAAU,CAACJ,IAAI,CAAC,SAAS,CAAC,CAAC,CAC9BM,CAAC,CAAEF,UAAU,CAACJ,IAAI,CAAC,QAAQ,CAAC,CAAC,CAC7BO,CAAC,CAAEH,UAAU,CAACJ,IAAI,CAAC,UAAU,CAAC,CAAC,CAC/BQ,CAAC,CAAEC,QAAQ,CAACT,IAAI,CAAC,WAAW,CAAC,CAC/B,CAAC,CACH,CAAC,CAAC,CAEF;AACA,GAAI,CAAAjB,KAAK,CAACQ,GAAG,CAAE,CACbmB,IAAI,CAAE,aAAa,CACnBtB,IAAI,CAAE,CACJuB,QAAQ,CAAE,CAAC,CACTvB,IAAI,CAAES,QAAQ,CACde,KAAK,CAAE,aAAa,CACpBC,WAAW,CAAE,MAAM,CACnBC,eAAe,CAAE,sBAAsB,CACvCC,WAAW,CAAE,CACf,CAAC,CACH,CAAC,CACDC,OAAO,CAAE,CACPC,MAAM,CAAE,CACNC,KAAK,CAAE,CAAC,CACNR,IAAI,CAAE,MAAM,CACZS,YAAY,CAAE,QAAQ,CACtBC,IAAI,CAAE,CACJC,IAAI,CAAE,MAAM,CACZC,cAAc,CAAE,CACdC,IAAI,CAAE,WACR,CACF,CAAC,CACDC,KAAK,CAAE,CACLC,MAAM,CAAE,MACV,CACF,CAAC,CAAC,CACFC,KAAK,CAAE,CAAC,CACNC,UAAU,CAAE,CACVC,OAAO,CAAE,IAAI,CACbC,WAAW,CAAE,OACf,CACF,CAAC,CACH,CACF,CACF,CAAC,CAAC,CACJ,CACF,CAAC,CAAE,CAACzC,IAAI,CAAC,CAAC,CAEV,mBAAOH,IAAA,WAAQ6C,GAAG,CAAEzC,QAAS,CAAE,CAAC,CAClC,CAAC,CAED,cAAe,CAAAH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}