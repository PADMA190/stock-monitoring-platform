{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{Chart}from'chart.js';import{jsx as _jsx}from\"react/jsx-runtime\";const StockChart=_ref=>{let{data}=_ref;const chartRef=useRef();useEffect(()=>{if(data&&chartRef.current){const ctx=chartRef.current.getContext('2d');// Extracting data\nconst labels=Object.keys(data['Time Series (15min)']).reverse();const ohlcData=labels.map(date=>{const item=data['Time Series (15min)'][date];return{t:new Date(date),o:parseFloat(item['1. open']),h:parseFloat(item['2. high']),l:parseFloat(item['3. low']),c:parseFloat(item['4. close']),v:parseInt(item['5. volume'])};});// Drawing chart\nnew Chart(ctx,{type:'candlestick',data:{datasets:[{data:ohlcData,label:'Stock Price',borderColor:'blue',backgroundColor:'rgba(0, 0, 255, 0.3)',borderWidth:1}]},options:{scales:{xAxes:[{type:'time',distribution:'linear',time:{unit:'hour',displayFormats:{hour:'MMM D, hA'}},ticks:{source:'data'}}],yAxes:[{scaleLabel:{display:true,labelString:'Price'}}]}}});}},[data]);return/*#__PURE__*/_jsx(\"canvas\",{ref:chartRef});};export default StockChart;","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsx","_jsx","StockChart","_ref","data","chartRef","current","ctx","getContext","labels","Object","keys","reverse","ohlcData","map","date","item","t","Date","o","parseFloat","h","l","c","v","parseInt","type","datasets","label","borderColor","backgroundColor","borderWidth","options","scales","xAxes","distribution","time","unit","displayFormats","hour","ticks","source","yAxes","scaleLabel","display","labelString","ref"],"sources":["C:/Users/jaypa/OneDrive/Documents/django_projects/blendnet-intern/frontend/src/components/StockChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst StockChart = ({ data }) => {\r\n    const chartRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (data && chartRef.current) {\r\n            const ctx = chartRef.current.getContext('2d');\r\n\r\n            // Extracting data\r\n            const labels = Object.keys(data['Time Series (15min)']).reverse();\r\n            const ohlcData = labels.map(date => {\r\n                const item = data['Time Series (15min)'][date];\r\n                return {\r\n                    t: new Date(date),\r\n                    o: parseFloat(item['1. open']),\r\n                    h: parseFloat(item['2. high']),\r\n                    l: parseFloat(item['3. low']),\r\n                    c: parseFloat(item['4. close']),\r\n                    v: parseInt(item['5. volume'])\r\n                };\r\n            });\r\n\r\n            // Drawing chart\r\n            new Chart(ctx, {\r\n                type: 'candlestick',\r\n                data: {\r\n                    datasets: [{\r\n                        data: ohlcData,\r\n                        label: 'Stock Price',\r\n                        borderColor: 'blue',\r\n                        backgroundColor: 'rgba(0, 0, 255, 0.3)',\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        xAxes: [{\r\n                            type: 'time',\r\n                            distribution: 'linear',\r\n                            time: {\r\n                                unit: 'hour',\r\n                                displayFormats: {\r\n                                    hour: 'MMM D, hA'\r\n                                }\r\n                            },\r\n                            ticks: {\r\n                                source: 'data'\r\n                            }\r\n                        }],\r\n                        yAxes: [{\r\n                            scaleLabel: {\r\n                                display: true,\r\n                                labelString: 'Price'\r\n                            }\r\n                        }]\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }, [data]);\r\n\r\n    return <canvas ref={chartRef} />;\r\n};\r\n\r\nexport default StockChart;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,OAASC,KAAK,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjC,KAAM,CAAAC,UAAU,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACxB,KAAM,CAAAE,QAAQ,CAAGP,MAAM,CAAC,CAAC,CAEzBD,SAAS,CAAC,IAAM,CACZ,GAAIO,IAAI,EAAIC,QAAQ,CAACC,OAAO,CAAE,CAC1B,KAAM,CAAAC,GAAG,CAAGF,QAAQ,CAACC,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC,CAE7C;AACA,KAAM,CAAAC,MAAM,CAAGC,MAAM,CAACC,IAAI,CAACP,IAAI,CAAC,qBAAqB,CAAC,CAAC,CAACQ,OAAO,CAAC,CAAC,CACjE,KAAM,CAAAC,QAAQ,CAAGJ,MAAM,CAACK,GAAG,CAACC,IAAI,EAAI,CAChC,KAAM,CAAAC,IAAI,CAAGZ,IAAI,CAAC,qBAAqB,CAAC,CAACW,IAAI,CAAC,CAC9C,MAAO,CACHE,CAAC,CAAE,GAAI,CAAAC,IAAI,CAACH,IAAI,CAAC,CACjBI,CAAC,CAAEC,UAAU,CAACJ,IAAI,CAAC,SAAS,CAAC,CAAC,CAC9BK,CAAC,CAAED,UAAU,CAACJ,IAAI,CAAC,SAAS,CAAC,CAAC,CAC9BM,CAAC,CAAEF,UAAU,CAACJ,IAAI,CAAC,QAAQ,CAAC,CAAC,CAC7BO,CAAC,CAAEH,UAAU,CAACJ,IAAI,CAAC,UAAU,CAAC,CAAC,CAC/BQ,CAAC,CAAEC,QAAQ,CAACT,IAAI,CAAC,WAAW,CAAC,CACjC,CAAC,CACL,CAAC,CAAC,CAEF;AACA,GAAI,CAAAjB,KAAK,CAACQ,GAAG,CAAE,CACXmB,IAAI,CAAE,aAAa,CACnBtB,IAAI,CAAE,CACFuB,QAAQ,CAAE,CAAC,CACPvB,IAAI,CAAES,QAAQ,CACde,KAAK,CAAE,aAAa,CACpBC,WAAW,CAAE,MAAM,CACnBC,eAAe,CAAE,sBAAsB,CACvCC,WAAW,CAAE,CACjB,CAAC,CACL,CAAC,CACDC,OAAO,CAAE,CACLC,MAAM,CAAE,CACJC,KAAK,CAAE,CAAC,CACJR,IAAI,CAAE,MAAM,CACZS,YAAY,CAAE,QAAQ,CACtBC,IAAI,CAAE,CACFC,IAAI,CAAE,MAAM,CACZC,cAAc,CAAE,CACZC,IAAI,CAAE,WACV,CACJ,CAAC,CACDC,KAAK,CAAE,CACHC,MAAM,CAAE,MACZ,CACJ,CAAC,CAAC,CACFC,KAAK,CAAE,CAAC,CACJC,UAAU,CAAE,CACRC,OAAO,CAAE,IAAI,CACbC,WAAW,CAAE,OACjB,CACJ,CAAC,CACL,CACJ,CACJ,CAAC,CAAC,CACN,CACJ,CAAC,CAAE,CAACzC,IAAI,CAAC,CAAC,CAEV,mBAAOH,IAAA,WAAQ6C,GAAG,CAAEzC,QAAS,CAAE,CAAC,CACpC,CAAC,CAED,cAAe,CAAAH,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}